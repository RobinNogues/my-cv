name: Build and Deploy to Production VPS

on:
  push:
    branches:
      - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_FRONTEND: robinnogues/my-cv-frontend
  IMAGE_NAME_BACKEND: robinnogues/my-cv-backend
  IMAGE_NAME_REVERSE_PROXY: robinnogues/my-cv-reverse-proxy

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry (GitHub Actions Runner)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./my-cv-frontend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:latest

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./my-cv-backend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:latest

      - name: Build and push reverse-proxy image
        uses: docker/build-push-action@v6
        with:
          context: ./reverse-proxy
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_REVERSE_PROXY }}:latest

  deploy:
    name: Deploy to VPS
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Create deployment directories on VPS
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: mkdir -p ${{ secrets.VPS_DIR }}/my-cv-backend
      - name: Copy deployment files to VPS
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "${{ secrets.VPS_DIR }}"
          overwrite: true

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.VPS_DIR }}

            cat <<EOF > my-cv-backend/.env
            EMAIL=${{ secrets.EMAIL }}
            EMAIL_PASS=${{ secrets.EMAIL_PASS }}
            EOF

            printf "%s" "${{ secrets.GHCR_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

            # Pull the new images and restart the services
            docker compose pull
            docker compose up -d --remove-orphans
